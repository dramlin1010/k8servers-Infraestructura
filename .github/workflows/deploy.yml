name: Deploy
on:
  workflow_dispatch:

jobs:
  terraform_deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout del repositorio
        uses: actions/checkout@v3

      - name: Crear archivo terraform.tfvars
        run: |
          cat <<EOF > terraform.tfvars
          aws_access_key_id     = "${{ secrets.AWS_ACCESS_KEY_ID }}"
          aws_secret_access_key = "${{ secrets.AWS_SECRET_ACCESS_KEY }}"
          aws_session_token     = "${{ secrets.AWS_SESSION_TOKEN }}"
          aws_region            = "${{ secrets.AWS_REGION }}"
          aws_email             = "${{ secrets.AWS_EMAIL }}"
          hosted_zone_id        = "${{ secrets.HOSTED_ZONE_ID }}"
          admin_email           = "${{ secrets.ADMIN_EMAIL }}"
          base_domain           = "${{ secrets.BASE_DOMAIN }}"
          git_pat               = "${{ secrets.GIT_PAT }}"
          git_clone_username    = "${{ secrets.GIT_CLONE_USERNAME }}"
          s3_backup_bucket_name = "${{ secrets.S3_BACKUP_BUCKET_NAME }}"
          key_name              = "${{ secrets.KEY_NAME }}"
          EOF

      - name: AWS Creds
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: us-east-1

      - name: Configurar Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "1.4.0"

      - name: Instalar dos2unix
        run: |
          sudo apt-get update -y
          sudo apt-get install -y dos2unix

      - name: Corregir finales de lÃ­nea y preparar payload de User Data
        run: |
          dos2unix script/user_data.sh
          gzip -c script/user_data.sh > script/user_data.sh.gz
          base64 script/user_data.sh.gz > script/user_data.sh.gz.b64
          echo "Payload script/user_data.sh.gz.b64 generado."

      - name: Inicializar Terraform
        run: terraform init

      - name: Apply de Terraform
        run: terraform apply -auto-approve

      - name: Upload Terraform State as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Terraform State
          path: terraform.tfstate

      - name: Subir archivo tfstate a S3
        uses: a-sync/s3-uploader@master
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: 'us-east-1'
          S3_BUCKET: ${{ secrets.AWS_S3_BUCKET_TFSTATE }}
          FILE: terraform.tfstate
